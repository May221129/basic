mysql的锁机制相关的问题：

1.锁放程序代码这边，还是数据这边，为什么？
	答：锁要放在共享数据这边，否则：
		系统A和系统B都能够连接同一数据库去访问、操作数据，系统A的代码有锁，
		但是这限制系统B去访问、操作数据，所以这把锁是无效的。
2 存储引擎
	2.1 存储引擎的分类：https://www.cnblogs.com/sunsky303/p/8274586.html
		（1）InnoDB（默认的存储引擎）：事务型的存储引擎，有行级锁定和外键约束。由于锁的粒度更小，
			写操作不会锁定全表，所以在写操作并发较高时，使用Innodb引擎会提升效率。但是使用行级锁也不是
			绝对的，如果在执行一个SQL语句时MySQL不能确定要扫描的范围，InnoDB表同样会锁全表。
		（2）MyIsam：只支持表锁，不支持事务、行级锁和外键，因此当INSERT(插入)或UPDATE(更新)数据时即写操作
			需要锁定整个表，效率便会低一些。查询速度很快，如果对数据库insert和update的操作比较少的话比较适用。
		==》注意：“MyISAM不支持事务，就需要在service层对事务进行控制。”这句话是错的，
			代码层只是做了开启和提交，底层还是需要数据库的支持（用InnoDB）
		（3）Memory（也叫HEAP）堆内存：使用存在内存中的内容来创建表。每个MEMORY表只实际对应一个
			磁盘文件。MEMORY类型的表访问非常得快，因为它的数据是放在内存中的，并且默认使用HASH索
			引。但是一旦服务关闭，表中的数据就会丢失掉。 HEAP表格在你需要使用SELECT表达式来选择和操控数据的时候非常有用。
		（4）Blackhole（黑洞引擎）：
		（5）其他。
	2.2 引擎和锁之间的关系（选择什么引擎和锁有什么关系）
		InnoDB：支持表锁、行锁。
		MyISAM：只支持表锁。
	2.3 各个存储引擎的容错能力（）
	（1）InnoDB：
	（2）MyISAM：
		
3.SQL语句如何上锁？（博客有详情）

4.如何设置表锁、行锁？

5.页锁是什么，使用场景（页是个单位）

6.如何加读锁或写锁？

7.MySQL什么时候使用CAS？（使用CAS要考虑并发量，要清楚为什么）
	select时都会用上mvcc，但其底层用的是cas.
	不是自增，而是改变数字，随机改变数字，这样还适合用cas吗？
8.隔离级别（使用场景，如何设置）

9.常使用的和锁相关的语句（偏向MyISAM）：
	(1)手动增加表锁：lock table 表名1 read/write，表名2 read/write，其他；
	(2)查看所有被打开的表列表(是所有,并非只有当前会话):show open tables; ==》1就是锁了，0就是没上锁
	(3)给当前会话所有锁住表解锁:unlock tables;
	(4)分析表锁的频度,及表锁争用等待情况:show status like 'table%';
	
	==>1.读阻塞写，怎么办？			  	
					.
